-- LocalScript inside StarterPlayerScripts
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local PlaceId = game.PlaceId
local LocalPlayer = Players.LocalPlayer

-- Function to find a low-population server
local function findLowServer()
	local servers = {}
	local cursor = ""
	
	repeat
		local url = string.format(
			"https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100%s",
			PlaceId,
			cursor ~= "" and "&cursor="..cursor or ""
		)
		
		local success, result = pcall(function()
			return HttpService:JSONDecode(game:HttpGet(url))
		end)
		
		if success and result and result.data then
			for _, server in ipairs(result.data) do
				if server.playing < server.maxPlayers then
					table.insert(servers, server)
				end
			end
			cursor = result.nextPageCursor or ""
		else
			break
		end
	until cursor == "" or #servers >= 1
	
	table.sort(servers, function(a, b)
		return a.playing < b.playing
	end)
	
	return servers[1]
end

-- Try teleport with retries
local function tryTeleport(placeId, serverId, player, retries)
	retries = retries or 3
	for i = 1, retries do
		local success, err = pcall(function()
			TeleportService:TeleportToPlaceInstance(placeId, serverId, player)
		end)
		if success then
			return true
		else
			warn(("Teleport attempt %d failed: %s"):format(i, err))
			task.wait(0.5) -- half a second delay before retry
		end
	end
	return false
end

-- Main logic
if #Players:GetPlayers() >= game.Players.MaxPlayers then
	local lowServer = findLowServer()
	if lowServer then
		local worked = tryTeleport(PlaceId, lowServer.id, LocalPlayer, 5)
		if not worked then
			warn("Failed to teleport after retries.")
		end
	end
end
